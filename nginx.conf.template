worker_processes auto;
events { worker_connections 1024; }
http {
    sendfile on;

    log_format detailed '$remote_addr - $real_ip - [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log detailed;
    
    # Доверяем Railway's private network для X-Forwarded-For
    set_real_ip_from 100.64.0.0/10;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    
    # DNS resolver
    resolver 1.1.1.1 1.0.0.1 valid=1s ipv6=off;
    resolver_timeout 5s;
    
    # Определяем список разрешенных IP на основе РЕАЛЬНОГО IP
    geo $real_ip $allowed_ip {
        default 1;
        
        # Блокируем localhost и локальные сети
        127.0.0.0/8 0;
        10.0.0.0/8 0;
        172.16.0.0/12 0;
        192.168.0.0/16 0;
        
        # Блокируем конкретный IP
        94.45.147.5 0;
    }
    
    server {
        listen ${PORT};
        server_name ${SERVER_NAME};
        
        # Проверка IP для всех location кроме health
        if ($allowed_ip = 0) {
            return 403;
        }
        
        # Health check endpoint
        location = /health {
            access_log off;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Content-Type' 'text/plain' always;
            return 200 'OK';
        }
        
        # Static assets
        location /static {
            set $backend "${POSTHOG_CLOUD_REGION}-assets.i.posthog.com";
            proxy_pass https://$backend;
            proxy_set_header Host $backend;
            proxy_ssl_server_name on;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_hide_header 'Access-Control-Allow-Origin';
            proxy_hide_header 'Access-Control-Allow-Methods';
            proxy_hide_header 'Access-Control-Allow-Headers';
            proxy_hide_header 'Access-Control-Expose-Headers';
            
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
        
        # Main API endpoints
        location / {
            set $backend "${POSTHOG_CLOUD_REGION}.i.posthog.com";
            proxy_pass https://$backend;
            proxy_set_header Host $backend;
            proxy_ssl_server_name on;
            
            # Передаём реальный IP клиента
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_hide_header 'Access-Control-Allow-Origin';
            proxy_hide_header 'Access-Control-Allow-Methods';
            proxy_hide_header 'Access-Control-Allow-Headers';
            proxy_hide_header 'Access-Control-Expose-Headers';
            
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
    }
}